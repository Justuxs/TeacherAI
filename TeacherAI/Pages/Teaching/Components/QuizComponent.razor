<!-- Pages/Quiz.razor -->
@using TeacherAI.Data;
@using TeacherAI.Service;


<style>
    .quiz-container {
        max-width: 800px;
        margin: auto;
        padding: 20px;
        text-align: center;
    }

    .question-container {
        background-color: #3498db;
        color: #fff;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 10px;
    }

    .answer-button {
        background-color: #2ecc71;
        color: #fff;
        padding: 10px 20px;
        margin: 5px;
        cursor: pointer;
        border: none;
        border-radius: 5px;
        font-size: 16px;
    }

    .score-container {
        margin-top: 20px;
        font-size: 18px;
        font-weight: bold;
        color: #2ecc71;
    }
</style>

<div class="quiz-container">

    @if (quiz != null)
    {
        <div class="question-container">
            <h3>Klausimas</h3>

            <p>@quiz.Klausimas</p>

            @if (!isAnswered)
            {
                @foreach (var answer in quiz.Atsakymai)
                {
                    var randomColor = GetRandomColor();

                    <button class="answer-button" style="background-color: @randomColor" @onclick="()=>CheckAnswer(answer.Key)">@answer.Value</button>
                }
            }
            else
            {
                <div>
                    <button class="beautiful-button">
                        Paiškinimas
                    </button>
                    <button class="beautiful-button">
                        Uždaryti
                    </button>
                </div>
            }

        </div>
    }

    <!--<div class="score-container">
        Score: @score
    </div>-->
</div>

@code {
    [Parameter]
    public EventCallback<bool> EndQuiz { get; set; }

    [Parameter]
    public AIService AIService { get; set; }

    private Quiz quiz;

    private Random random = new Random();

    private bool showQuestion = true;
    private bool isAnswered = false;
    private bool isAnsweredGood = false;

    private int score = 0;

    protected override async Task OnInitializedAsync()
    {
        quiz = AIService.GetQuiz();

    }

    private string GetRandomColor()
    {
        var color = $"rgb({random.Next(256)}, {random.Next(256)}, {random.Next(256)})";
        return color;
    }

    private async void CheckAnswer(string selectedAnswer)
    {
        isAnswered = true;
        isAnsweredGood = false;

        if (selectedAnswer == quiz.TeisingasAtsakymas)
        {
            isAnsweredGood = true;
            Console.WriteLine("Correct!");
            score++;
        }
        else
        {
            // Handle incorrect answer
            Console.WriteLine("Incorrect!");
        }

        showQuestion = false;
        //await EndQuiz.InvokeAsync(true);
    }

}
