<!-- Pages/Chat.razor -->
@page "/Chat"
@using TeacherAI.Data;
@inject IJSRuntime JSRuntime

<style>
    body, html {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    /* Style the chat container */
    .chat-container {
        width: 100%;
        height: 65vh;
        margin: 20px auto;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        overflow-y: auto; /* Enable vertical scrolling */
    }

    /* Style the chat header */
    .chat-header {
        background-color: #3498db;
        color: #fff;
        padding: 10px;
        text-align: center;
        background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
    }

    /* Style the messages */
    .message {
        padding: 10px;
        margin: 5px;
        border-radius: 5px;
        word-wrap: break-word;
        background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
    }

    .sent {
        background-color: #3498db;
        color: #fff;
        align-self: flex-end;
    }

    .received {
        background : #3498db !important; 
        background-color: #3498db !important; 
        color: #fff;
        align-self: flex-start;
    }
    
    .answered {
        background-image: linear-gradient(180deg, #3498db 0%, #3a0647 70%);

        color: #fff;
        align-self: flex-start;
    }

</style>

<div class="chat-container" @ref="chatContainerRef">
    <div class="chat-header">
        <span>AI mokytojas</span>
    </div>

    @if (Chat != null)
    {
        @foreach (Message message in Chat.Messages)
        {
            <div class="message @(!message.isGenerated? "received" : (message.isAnswered? "answered" : "sent") ) ">
                <div class="message-content">
                    <p> @message.Content</p>
                </div>
            </div>
        }       }
</div>

@code {
    [Parameter]
    public Chat Chat { get; set; }

    private ElementReference chatContainerRef;


    private async Task ScrollToBottom()
    {
        await JSRuntime.InvokeVoidAsync("scrollToBottom", chatContainerRef);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await ScrollToBottom();
    }

}
